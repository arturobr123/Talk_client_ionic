{"version":3,"sources":["../../../src/@ionic-native/plugins/image-picker/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AA6BxE;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AAWH,IAAa,WAAW;IAAS,+BAAiB;IAAlD;;IAoCA,CAAC;IAnCC;;;;;OAKG;IAIH,iCAAW,GAAX,UAAY,OAA2B,IAAkB,MAAM,CAAC,CAAC,CAAC;IAElE;;;OAGG;IAIH,uCAAiB,GAAjB,cAAwC,MAAM,CAAC,CAAC,CAAC;IAEjD;;;OAGG;IAIH,2CAAqB,GAArB,cAAwC,MAAM,CAAC,CAAC,CAAC;IAQnD,kBAAC;AAAD,CApCA,AAoCC,CApCgC,iBAAiB,GAoCjD;AANM,sBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,0BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAzBA;IAHC,OAAO,CAAC;QACP,aAAa,EAAE,SAAS;KACzB,CAAC;;;;8CACgE;AASlE;IAHC,OAAO,CAAC;QACP,SAAS,EAAE,CAAC,SAAS,CAAC;KACvB,CAAC;;;;oDAC+C;AASjD;IAHC,OAAO,CAAC;QACP,SAAS,EAAE,CAAC,SAAS,CAAC;KACvB,CAAC;;;;wDAC+C;AA5BtC,WAAW;IAVvB,MAAM,CAAC;QACN,UAAU,EAAE,aAAa;QACzB,MAAM,EAAE,6DAA6D;QACrE,SAAS,EAAE,oBAAoB;QAC/B,IAAI,EAAE,yDAAyD;QAC/D,OAAO,EAAE,sJAAsJ;QAC/J,gBAAgB,EAAE,CAAC,iCAAiC,CAAC;QACrD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,WAAW,CAoCvB;SApCY,WAAW","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\n\nexport interface ImagePickerOptions {\n  /**\n   * max images to be selected, defaults to 15. If this is set to 1, upon selection of a single image, the plugin will return it. (Android only)\n   */\n  maximumImagesCount?: number;\n\n  /**\n   * Max width to allow images to be\n   */\n  width?: number;\n  /**\n   * Max height to allow images to be\n   */\n  height?: number;\n\n  /**\n   * Quality of images, defaults to 100\n   */\n  quality?: number;\n\n  /**\n   * Output type, defaults to 0  (FILE_URI).\n   */\n  outputType?: number;\n}\n\n/**\n * @name Image Picker\n * @description\n * Cordova Plugin For Multiple Image Selection\n *\n * Requires Cordova plugin: `cordova-plugin-image-picker`.\n * For more info, please see the https://github.com/wymsee/cordova-imagePicker\n *\n * @usage\n * ```typescript\n * import { ImagePicker } from '@ionic-native/image-picker';\n *\n *\n * constructor(private imagePicker: ImagePicker) { }\n *\n * ...\n *\n * this.imagePicker.getPictures(options).then((results) => {\n *   for (var i = 0; i < results.length; i++) {\n *       console.log('Image URI: ' + results[i]);\n *   }\n * }, (err) => { });\n *\n * ```\n * @interfaces\n * ImagePickerOptions\n */\n@Plugin({\n  pluginName: 'ImagePicker',\n  plugin: 'https://github.com/Telerik-Verified-Plugins/ImagePicker.git',\n  pluginRef: 'window.imagePicker',\n  repo: 'https://github.com/Telerik-Verified-Plugins/ImagePicker',\n  install: 'ionic cordova plugin add https://github.com/Telerik-Verified-Plugins/ImagePicker.git --variable PHOTO_LIBRARY_USAGE_DESCRIPTION=\"your usage message\"',\n  installVariables: ['PHOTO_LIBRARY_USAGE_DESCRIPTION'],\n  platforms: ['Android', 'iOS']\n})\n\nexport class ImagePicker extends IonicNativePlugin {\n  /**\n   * Pick pictures from the library.\n   * @param {ImagePickerOptions} options\n   * @returns {Promise<any>} Returns a Promise that resolves the image file URI\n   * otherwise rejects with an error.\n   */\n  @Cordova({\n    callbackOrder: 'reverse'\n  })\n  getPictures(options: ImagePickerOptions): Promise<any> { return; }\n\n  /**\n   * Check if we have permission to read images\n   * @returns {Promise<boolean>} Returns a promise that resolves with a boolean that indicates whether we have permission\n   */\n  @Cordova({\n    platforms: ['Android']\n  })\n  hasReadPermission(): Promise<boolean> { return; }\n\n  /**\n   * Request permission to read images\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['Android']\n  })\n  requestReadPermission(): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}